int seed = 1;

function _xor(int a, int b) -> int {
    int b0 = ((a/1)%2)!=((b/1)%2);
    int b1 = ((a/2)%2)!=((b/2)%2);
    int b2 = ((a/4)%2)!=((b/4)%2);
    int b3 = ((a/8)%2)!=((b/8)%2);
    int b4 = ((a/16)%2)!=((b/16)%2);
    int b5 = ((a/32)%2)!=((b/32)%2);
    int b6 = ((a/64)%2)!=((b/64)%2);
    int b7 = ((a/128)%2)!=((b/128)%2);
    int b8 = ((a/256)%2)!=((b/256)%2);
    int b9 = ((a/512)%2)!=((b/512)%2);
    int bA = ((a/1024)%2)!=((b/1024)%2);
    int bB = ((a/2048)%2)!=((b/2048)%2);
    int bC = ((a/4096)%2)!=((b/4096)%2);
    int bD = ((a/8192)%2)!=((b/8192)%2);
    int bE = ((a/16384)%2)!=((b/16384)%2);
    int bF = ((a/32768)%2)!=((b/32768)%2);
    return b0*1 + b1*2 + b2*4 + b3*8 + b4*16 + b5*32 + b6*64 + b7*128 + b8*256 + b9*512 + bA*1024 + bB*2048 + bC*4096 + bD*8192 + bE*16384 + bF*32768;
}

function rand() -> int {
    seed = _xor(seed, seed * 128);
    seed = _xor(seed, seed / 512);
    seed = _xor(seed, seed * 256);
    return seed;
}