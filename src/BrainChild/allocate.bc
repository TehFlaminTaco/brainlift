class _{}
function alloc(int size) -> int*{
    int* table;
    asm {seta [table]
         setb aftercode
         putbptra}
    int lastSize;
    while((((*(table+1))<(size+3))*(*(table+1))) + *table){
        table = table + 1 + *(table + 1);
    }
    int nextSize = *(table+1);
    if(nextSize > 0){
        nextSize = (nextSize - size) - 2;
        *(table+size+2) = nextSize;
    }
    *table = 1;
    *(table+1) = size;
    return table+2;
}
function free(void* p){
    int* table;
    asm {seta [table]
         setb aftercode
         putbptra}
    int* last = table;
    while(table < p){
        last = table;
        table = table + 1 + *(table + 1);
    }
    *(p-2 -> int*) = 0;
    if(0==*last){
        *(last+1) = *(last+1) + *(table + 1) + 2;
    }
}